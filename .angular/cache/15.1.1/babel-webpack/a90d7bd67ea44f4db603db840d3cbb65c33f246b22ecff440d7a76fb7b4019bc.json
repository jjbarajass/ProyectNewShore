{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ContenidoComponent = class ContenidoComponent {\n  consoleLog() {\n    console.log(this.origen);\n    console.log(this.destino);\n  }\n  constructor(http) {\n    this.http = http;\n    this.username = '';\n    this.origen = '';\n    this.destino = '';\n    this.nombre = '';\n    this.monedaSeleccionada = 'USD';\n    this.resultados = [];\n    this.origen = '';\n    this.destino = '';\n    this.nombre = '';\n  }\n  convertirMoneda() {\n    if (this.monedaSeleccionada === 'MXN') {\n      this.auxValorMoneda = 0;\n      this.auxValorMoneda = this.respuesta?.obj?.Precio;\n      this.auxValorMoneda = this.auxValorMoneda * 18.92;\n    } else if (this.monedaSeleccionada === 'COP') {\n      this.auxValorMoneda = 0;\n      this.auxValorMoneda = this.respuesta?.obj?.Precio;\n      this.auxValorMoneda = this.auxValorMoneda * 4648;\n    } else if (this.monedaSeleccionada === 'USD') {\n      this.auxValorMoneda = 0;\n      this.auxValorMoneda = this.respuesta?.obj?.Precio;\n    }\n  }\n  checkRoute(origin, destination, flights) {\n    console.log('ESTOS SON LOS VUELOS', flights);\n    let res = {\n      status: false,\n      codigo: 0,\n      msg: '',\n      obj: {}\n    };\n    let originExists = false;\n    let destinationExists = false;\n    for (let flight of flights[0]) {\n      if (flight.departureStation === origin) {\n        originExists = true;\n      }\n      if (flight.arrivalStation === destination) {\n        destinationExists = true;\n      }\n    }\n    if (!originExists) {\n      res['msg'] = 'El origen no está registrado en la aerolínea.';\n      res['obj'] = {\n        Origen: origin,\n        Destino: destination,\n        Aerolinea: 'Aerolínea no encontrada',\n        NumeroVuelo: 'No aplica',\n        Precio: 'No aplica'\n      };\n      return res;\n      /*     console.log('El origen no está registrado en la aerolínea.');\r\n      return false; */\n    }\n\n    if (!destinationExists) {\n      res['msg'] = 'El destino no está registrado en la aerolínea.';\n      res['obj'] = {\n        Origen: origin,\n        Destino: destination,\n        Aerolinea: 'Aerolínea no encontrada',\n        NumeroVuelo: 'No aplica',\n        Precio: 'No aplica'\n      };\n      return res;\n      /*    console.log('El destino no está registrado en la aerolínea.');\r\n      return false; */\n    }\n\n    for (let flight of flights[0]) {\n      if (flight.departureStation === origin && flight.arrivalStation === destination) {\n        res['status'] = true;\n        res['msg'] = 'Ruta de viaje encontrada: ';\n        res['obj'] = {\n          Origen: origin,\n          Destino: destination,\n          Aerolinea: flight['flightCarrier'],\n          NumeroVuelo: flight['flightNumber'],\n          Precio: flight['price']\n        };\n        return res;\n        /* console.log('Ruta de viaje encontrada: ');\r\n        console.log('Origen: ' + origin);\r\n        console.log('Destino: ' + destination);\r\n        console.log('Aerolínea: ' + flight.flightCarrier);\r\n        console.log('Número de vuelo: ' + flight.flightNumber);\r\n        console.log('Precio: ' + flight.price);\r\n        return true; */\n      }\n    }\n\n    for (let flight of flights[0]) {\n      if (flight.departureStation === origin) {\n        for (let f of flights[0]) {\n          if (f.departureStation === flight.arrivalStation && f.arrivalStation === destination) {\n            res['status'] = true;\n            res['msg'] = 'Ruta de viaje con escalas encontradas: ';\n            res['obj'] = {\n              Origen: origin,\n              Destino: destination,\n              Aerolinea: f['flightCarrier'],\n              NumeroVuelo: f['flightNumber'],\n              Precio: flight['price'] + f['price']\n            };\n            return res;\n            /*  console.log('Ruta de viaje con escalas encontrada: ');\r\n            console.log('Origen: ' + origin);\r\n            console.log('Destino: ' + destination);\r\n            console.log('Aerolínea: ' + f.flightCarrier);\r\n            console.log('Número de vuelo: ' + f.flightNumber);\r\n            console.log('Precio: ' + (flight.price + f.price));\r\n            return true; */\n          }\n        }\n      }\n    }\n\n    res['msg'] = 'La ruta no puede ser calculada, no se ha encontrado una ruta de viaje entre el origen y el destino especificado.';\n    return res;\n  }\n  getData() {\n    if (this.origen === this.destino) {\n      alert('Lo sentimos, el valor del origen y el destino son los mismos, ingresa valores diferentes para poder consultar tu vuelo ');\n    } else {\n      if (!this.origen || !this.destino) {\n        alert('INGRESE TODOS LOS CAMPOS');\n        return;\n      }\n      this.http.get(`https://recruiting-api.newshore.es/api/flights/2`).subscribe(data => {\n        this.resultados.push(data);\n        this.data = [data];\n        console.log(this.data);\n        this.respuesta = this.checkRoute(this.origen, this.destino, this.data);\n        console.log(this.respuesta);\n        this.origen = '';\n        this.destino = '';\n      }, error => {\n        console.log('ERROR', error);\n        this.origen = '';\n        this.destino = '';\n      });\n    }\n  }\n};\nContenidoComponent = __decorate([Component({\n  selector: 'app-contenido',\n  templateUrl: './contenido.component.html',\n  styleUrls: ['./contenido.component.css']\n})], ContenidoComponent);\nexport { ContenidoComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAqB,eAAe;AAQ/C,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAW7BC,UAAU;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;IACxBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,OAAO,CAAC;EAC3B;EACAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAd1B,aAAQ,GAAG,EAAE;IACX,WAAM,GAAG,EAAE;IACX,YAAO,GAAG,EAAE;IACZ,WAAM,GAAG,EAAE;IACX,uBAAkB,GAAW,KAAK;IAKlC,eAAU,GAAU,EAAE;IAMpB,IAAI,CAACH,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACG,MAAM,GAAG,EAAE;EAClB;EACAC,eAAe;IACb,IAAI,IAAI,CAACC,kBAAkB,KAAK,KAAK,EAAE;MACrC,IAAI,CAACC,cAAc,GAAG,CAAC;MACvB,IAAI,CAACA,cAAc,GAAG,IAAI,CAACC,SAAS,EAAEC,GAAG,EAAEC,MAAM;MACjD,IAAI,CAACH,cAAc,GAAG,IAAI,CAACA,cAAc,GAAG,KAAK;KAClD,MAAM,IAAI,IAAI,CAACD,kBAAkB,KAAK,KAAK,EAAE;MAC5C,IAAI,CAACC,cAAc,GAAG,CAAC;MACvB,IAAI,CAACA,cAAc,GAAG,IAAI,CAACC,SAAS,EAAEC,GAAG,EAAEC,MAAM;MACjD,IAAI,CAACH,cAAc,GAAG,IAAI,CAACA,cAAc,GAAG,IAAI;KACjD,MAAM,IAAI,IAAI,CAACD,kBAAkB,KAAK,KAAK,EAAE;MAC5C,IAAI,CAACC,cAAc,GAAG,CAAC;MACvB,IAAI,CAACA,cAAc,GAAG,IAAI,CAACC,SAAS,EAAEC,GAAG,EAAEC,MAAM;;EAErD;EACAC,UAAU,CAACC,MAAc,EAAEC,WAAmB,EAAEC,OAAc;IAC5DhB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEe,OAAO,CAAC;IAC5C,IAAIC,GAAG,GAAG;MAAEC,MAAM,EAAE,KAAK;MAAEC,MAAM,EAAE,CAAC;MAAEC,GAAG,EAAE,EAAE;MAAET,GAAG,EAAE;IAAE,CAAE;IACxD,IAAIU,YAAY,GAAG,KAAK;IACxB,IAAIC,iBAAiB,GAAG,KAAK;IAE7B,KAAK,IAAIC,MAAM,IAAIP,OAAO,CAAC,CAAC,CAAC,EAAE;MAC7B,IAAIO,MAAM,CAACC,gBAAgB,KAAKV,MAAM,EAAE;QACtCO,YAAY,GAAG,IAAI;;MAErB,IAAIE,MAAM,CAACE,cAAc,KAAKV,WAAW,EAAE;QACzCO,iBAAiB,GAAG,IAAI;;;IAI5B,IAAI,CAACD,YAAY,EAAE;MACjBJ,GAAG,CAAC,KAAK,CAAC,GAAG,+CAA+C;MAC5DA,GAAG,CAAC,KAAK,CAAC,GAAG;QACXS,MAAM,EAAEZ,MAAM;QACda,OAAO,EAAEZ,WAAW;QACpBa,SAAS,EAAE,yBAAyB;QACpCC,WAAW,EAAE,WAAW;QACxBjB,MAAM,EAAE;OACT;MACD,OAAOK,GAAG;MACV;;;;IAIF,IAAI,CAACK,iBAAiB,EAAE;MACtBL,GAAG,CAAC,KAAK,CAAC,GAAG,gDAAgD;MAC7DA,GAAG,CAAC,KAAK,CAAC,GAAG;QACXS,MAAM,EAAEZ,MAAM;QACda,OAAO,EAAEZ,WAAW;QACpBa,SAAS,EAAE,yBAAyB;QACpCC,WAAW,EAAE,WAAW;QACxBjB,MAAM,EAAE;OACT;MACD,OAAOK,GAAG;MACV;;;;IAIF,KAAK,IAAIM,MAAM,IAAIP,OAAO,CAAC,CAAC,CAAC,EAAE;MAC7B,IACEO,MAAM,CAACC,gBAAgB,KAAKV,MAAM,IAClCS,MAAM,CAACE,cAAc,KAAKV,WAAW,EACrC;QACAE,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI;QACpBA,GAAG,CAAC,KAAK,CAAC,GAAG,4BAA4B;QACzCA,GAAG,CAAC,KAAK,CAAC,GAAG;UACXS,MAAM,EAAEZ,MAAM;UACda,OAAO,EAAEZ,WAAW;UACpBa,SAAS,EAAEL,MAAM,CAAC,eAAe,CAAC;UAClCM,WAAW,EAAEN,MAAM,CAAC,cAAc,CAAC;UACnCX,MAAM,EAAEW,MAAM,CAAC,OAAO;SACvB;QACD,OAAON,GAAG;QACV;;;;;;;;;;IAUJ,KAAK,IAAIM,MAAM,IAAIP,OAAO,CAAC,CAAC,CAAC,EAAE;MAC7B,IAAIO,MAAM,CAACC,gBAAgB,KAAKV,MAAM,EAAE;QACtC,KAAK,IAAIgB,CAAC,IAAId,OAAO,CAAC,CAAC,CAAC,EAAE;UACxB,IACEc,CAAC,CAACN,gBAAgB,KAAKD,MAAM,CAACE,cAAc,IAC5CK,CAAC,CAACL,cAAc,KAAKV,WAAW,EAChC;YACAE,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI;YACpBA,GAAG,CAAC,KAAK,CAAC,GAAG,yCAAyC;YACtDA,GAAG,CAAC,KAAK,CAAC,GAAG;cACXS,MAAM,EAAEZ,MAAM;cACda,OAAO,EAAEZ,WAAW;cACpBa,SAAS,EAAEE,CAAC,CAAC,eAAe,CAAC;cAC7BD,WAAW,EAAEC,CAAC,CAAC,cAAc,CAAC;cAC9BlB,MAAM,EAAEW,MAAM,CAAC,OAAO,CAAC,GAAGO,CAAC,CAAC,OAAO;aACpC;YACD,OAAOb,GAAG;YACV;;;;;;;;;;;;IAYRA,GAAG,CAAC,KAAK,CAAC,GACR,kHAAkH;IACpH,OAAOA,GAAG;EACZ;EACAc,OAAO;IACL,IAAI,IAAI,CAAC7B,MAAM,KAAK,IAAI,CAACC,OAAO,EAAE;MAChC6B,KAAK,CACH,yHAAyH,CAC1H;KACF,MAAM;MACL,IAAI,CAAC,IAAI,CAAC9B,MAAM,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;QACjC6B,KAAK,CAAC,0BAA0B,CAAC;QACjC;;MAEF,IAAI,CAAC3B,IAAI,CACN4B,GAAG,CAAC,kDAAkD,CAAC,CACvDC,SAAS,CACPC,IAAI,IAAI;QACP,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,IAAI,CAAC;QAC1B,IAAI,CAACA,IAAI,GAAG,CAACA,IAAI,CAAC;QAClBnC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACkC,IAAI,CAAC;QACtB,IAAI,CAACzB,SAAS,GAAG,IAAI,CAACG,UAAU,CAC9B,IAAI,CAACX,MAAM,EACX,IAAI,CAACC,OAAO,EACZ,IAAI,CAACgC,IAAI,CACV;QACDnC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACS,SAAS,CAAC;QAC3B,IAAI,CAACR,MAAM,GAAG,EAAE;QAChB,IAAI,CAACC,OAAO,GAAG,EAAE;MACnB,CAAC,EACAmC,KAAK,IAAI;QACRtC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEqC,KAAK,CAAC;QAC3B,IAAI,CAACpC,MAAM,GAAG,EAAE;QAChB,IAAI,CAACC,OAAO,GAAG,EAAE;MACnB,CAAC,CACF;;EAEP;CAeD;AAvLYL,kBAAkB,eAL9BD,SAAS,CAAC;EACT0C,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACW3C,kBAAkB,CAuL9B;SAvLYA,kBAAkB","names":["Component","ContenidoComponent","consoleLog","console","log","origen","destino","constructor","http","nombre","convertirMoneda","monedaSeleccionada","auxValorMoneda","respuesta","obj","Precio","checkRoute","origin","destination","flights","res","status","codigo","msg","originExists","destinationExists","flight","departureStation","arrivalStation","Origen","Destino","Aerolinea","NumeroVuelo","f","getData","alert","get","subscribe","data","resultados","push","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\jose\\Desktop\\NEWSHORE\\frontend\\desarrollo-newshore\\src\\app\\component\\contenido\\contenido.component.ts"],"sourcesContent":["import { Component,OnInit,Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-contenido',\n  templateUrl: './contenido.component.html',\n  styleUrls: ['./contenido.component.css']\n})\nexport class ContenidoComponent {\nusername = '';\n  origen = '';\n  destino = '';\n  nombre = '';\n  monedaSeleccionada: string = 'USD';\n  data: any;\n\n  respuesta: any;\n  auxValorMoneda: any;\n  resultados: any[] = [];\n  consoleLog() {\n    console.log(this.origen);\n    console.log(this.destino);\n  }\n  constructor(private http: HttpClient) {\n    this.origen = '';\n    this.destino = '';\n    this.nombre = '';\n  }\n  convertirMoneda() {\n    if (this.monedaSeleccionada === 'MXN') {\n      this.auxValorMoneda = 0;\n      this.auxValorMoneda = this.respuesta?.obj?.Precio;\n      this.auxValorMoneda = this.auxValorMoneda * 18.92;\n    } else if (this.monedaSeleccionada === 'COP') {\n      this.auxValorMoneda = 0;\n      this.auxValorMoneda = this.respuesta?.obj?.Precio;\n      this.auxValorMoneda = this.auxValorMoneda * 4648;\n    } else if (this.monedaSeleccionada === 'USD') {\n      this.auxValorMoneda = 0;\n      this.auxValorMoneda = this.respuesta?.obj?.Precio;\n    }\n  }\n  checkRoute(origin: string, destination: string, flights: any[]) {\n    console.log('ESTOS SON LOS VUELOS', flights);\n    let res = { status: false, codigo: 0, msg: '', obj: {} };\n    let originExists = false;\n    let destinationExists = false;\n\n    for (let flight of flights[0]) {\n      if (flight.departureStation === origin) {\n        originExists = true;\n      }\n      if (flight.arrivalStation === destination) {\n        destinationExists = true;\n      }\n    }\n\n    if (!originExists) {\n      res['msg'] = 'El origen no está registrado en la aerolínea.';\n      res['obj'] = {\n        Origen: origin,\n        Destino: destination,\n        Aerolinea: 'Aerolínea no encontrada',\n        NumeroVuelo: 'No aplica',\n        Precio: 'No aplica',\n      };\n      return res;\n      /*     console.log('El origen no está registrado en la aerolínea.');\n      return false; */\n    }\n\n    if (!destinationExists) {\n      res['msg'] = 'El destino no está registrado en la aerolínea.';\n      res['obj'] = {\n        Origen: origin,\n        Destino: destination,\n        Aerolinea: 'Aerolínea no encontrada',\n        NumeroVuelo: 'No aplica',\n        Precio: 'No aplica',\n      };\n      return res;\n      /*    console.log('El destino no está registrado en la aerolínea.');\n      return false; */\n    }\n\n    for (let flight of flights[0]) {\n      if (\n        flight.departureStation === origin &&\n        flight.arrivalStation === destination\n      ) {\n        res['status'] = true;\n        res['msg'] = 'Ruta de viaje encontrada: ';\n        res['obj'] = {\n          Origen: origin,\n          Destino: destination,\n          Aerolinea: flight['flightCarrier'],\n          NumeroVuelo: flight['flightNumber'],\n          Precio: flight['price'],\n        };\n        return res;\n        /* console.log('Ruta de viaje encontrada: ');\n        console.log('Origen: ' + origin);\n        console.log('Destino: ' + destination);\n        console.log('Aerolínea: ' + flight.flightCarrier);\n        console.log('Número de vuelo: ' + flight.flightNumber);\n        console.log('Precio: ' + flight.price);\n        return true; */\n      }\n    }\n\n    for (let flight of flights[0]) {\n      if (flight.departureStation === origin) {\n        for (let f of flights[0]) {\n          if (\n            f.departureStation === flight.arrivalStation &&\n            f.arrivalStation === destination\n          ) {\n            res['status'] = true;\n            res['msg'] = 'Ruta de viaje con escalas encontradas: ';\n            res['obj'] = {\n              Origen: origin,\n              Destino: destination,\n              Aerolinea: f['flightCarrier'],\n              NumeroVuelo: f['flightNumber'],\n              Precio: flight['price'] + f['price'],\n            };\n            return res;\n            /*  console.log('Ruta de viaje con escalas encontrada: ');\n            console.log('Origen: ' + origin);\n            console.log('Destino: ' + destination);\n            console.log('Aerolínea: ' + f.flightCarrier);\n            console.log('Número de vuelo: ' + f.flightNumber);\n            console.log('Precio: ' + (flight.price + f.price));\n            return true; */\n          }\n        }\n      }\n    }\n\n    res['msg'] =\n      'La ruta no puede ser calculada, no se ha encontrado una ruta de viaje entre el origen y el destino especificado.';\n    return res;\n  }\n  getData() {\n    if (this.origen === this.destino) {\n      alert(\n        'Lo sentimos, el valor del origen y el destino son los mismos, ingresa valores diferentes para poder consultar tu vuelo '\n      );\n    } else {\n      if (!this.origen || !this.destino) {\n        alert('INGRESE TODOS LOS CAMPOS');\n        return;\n      }\n      this.http\n        .get(`https://recruiting-api.newshore.es/api/flights/2`)\n        .subscribe(\n          (data) => {\n            this.resultados.push(data);\n            this.data = [data];\n            console.log(this.data);\n            this.respuesta = this.checkRoute(\n              this.origen,\n              this.destino,\n              this.data\n            );\n            console.log(this.respuesta);\n            this.origen = '';\n            this.destino = '';\n          },\n          (error) => {\n            console.log('ERROR', error);\n            this.origen = '';\n            this.destino = '';\n          }\n        );\n    }\n  }\n\n  // public image?: string;\n  // public Titulo: string = \"\"\n//   @Input() dataEntrante: any;\n//   nombre: string;\n//   mostrarValorEnConsola() {\n//   console.log(this.nombre);\n// }\n//   removeNumbers() {\n//   this.nombre.replace(/[^0-9]/g,'')\n// }\n//   constructor(){\n//     this.nombre = \"\";\n//   }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}